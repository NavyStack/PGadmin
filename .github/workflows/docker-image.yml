name: Docker Image CI

on:
  push:
    tags:
      - "v*.*"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.RELEASE_VERSION }}

      - name: Set version based on tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            navystack/pgadmin
            ghcr.io/navystack/pgadmin
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=schedule,pattern={{date 'DD/MM/YY-hhmmss' tz='Asia/Seoul'}}
          flavor: |
            latest=true

      - name: set env
        run: echo "NOW=$(TZ=Asia/Seoul date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Set up SSH
        uses: MrSquaare/ssh-setup-action@v3
        with:
          host: ${{ secrets.SSH_ARM64_RUNNER }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY_ARM64_RUNNER }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: ${{ secrets.AMD64_RUNNER_ENDPOINT }}
          append: |
            - endpoint: ${{ secrets.ARM64_RUNNER_ENDPOINT }}
              platforms: linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set lowercase repository owner
        run: |
          repo_owner_lowercase=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_OWNER_LOWERCASE=$repo_owner_lowercase" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.REPO_OWNER_LOWERCASE }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: debian-node_modules
          key: ${{ runner.os }}-debian-node_modules-cache-${{ hashFiles('debian.Dockerfile') }}

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.2
        with:
          cache-source: debian-node_modules
          cache-target: /pgadmin4/web/node_modules/

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: syno.Dockerfile
          push: true
          pull: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LOWERCASE }}/pgadmin:syno
            ghcr.io/${{ env.REPO_OWNER_LOWERCASE }}/pgadmin:syno-${{ env.NOW }}
            navystack/pgadmin:syno
            navystack/pgadmin:syno-${{ env.NOW }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: 1009.Dockerfile
          push: true
          pull: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LOWERCASE }}/pgadmin:pgadmin
            ghcr.io/${{ env.REPO_OWNER_LOWERCASE }}/pgadmin:pgadmin-${{ env.NOW }}
            navystack/navystack:pgadmin
            navystack/navystack:pgadmin-${{ env.NOW }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: debian.Dockerfile
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
